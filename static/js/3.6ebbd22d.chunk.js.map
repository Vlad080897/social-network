{"version":3,"sources":["components/main_container/dialogs/dialogs.module.css","components/main_container/dialogs/dialogsForm.jsx","components/main_container/dialogs/massages/massages.jsx","components/main_container/dialogs/user/user.jsx","components/main_container/dialogs/dialogs.jsx","components/main_container/dialogs/dialogsContainer.jsx"],"names":["module","exports","maxMassageLenght","maxLength","DialogsReduxForm","reduxForm","form","props","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","requiredField","DialogsForm","values","addMassageThunk","text","Massages","className","s","massages","User","id","Dialogs","massageElements","state","map","el","dialogsElemetns","dialogs","users","DialogsContainer","this","dialogsThunk","React","Component","compose","withLazyComponent","connect","massagesPage","withAuthRedirect2"],"mappings":"+GACAA,EAAOC,QAAU,CAAC,SAAW,0BAA0B,KAAO,wB,2MCiBxDC,EAAmBC,YAAU,KAgB7BC,EAAmBC,YAAU,CAAEC,KAAM,WAAlBD,EAdI,SAACE,GAC1B,OACI,uBAAMC,SAAUD,EAAME,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,KAAK,OAAOC,YAAY,oBAAoBC,UAAUC,IAAed,OAErG,8BACI,0DASDe,EA/BK,SAACV,GAOjB,OACI,cAACH,EAAD,CAAkBI,SANA,SAACU,GAEnBX,EAAMY,gBAAgBD,EAAOE,U,kBCAtBC,EANE,SAACd,GACd,OACI,qBAAKe,UAAWC,IAAEH,KAAlB,SAAyBb,EAAMiB,Y,kBCKxBC,EAPF,SAAClB,GAEV,OACI,sBAAKe,UAAWC,IAAEV,KAAlB,UAAyBN,EAAMM,KAAO,GAAKN,EAAMmB,GAAjD,QCmBOC,EAlBC,SAACpB,GAEb,IAAIqB,EAAkBrB,EAAMsB,MAAML,SAASM,KAAI,SAAAC,GAAE,OAAI,cAAC,EAAD,CAAUP,SAAUO,EAAGP,cACxEQ,EAAkBzB,EAAMsB,MAAMI,QAAQH,KAAI,SAAAC,GAAE,OAAI,cAAC,EAAD,CAAMlB,KAAMkB,EAAGlB,KAAMa,GAAIK,EAAGL,QAEhF,OACI,qCACI,qBAAKJ,UAAWC,IAAEW,MAAlB,SACKF,IAEL,qBAAKV,UAAWC,IAAEC,SAAlB,SACKI,IAEL,cAAC,EAAD,CAAaT,gBAAiBZ,EAAMY,sB,iCCX1CgB,E,uKACF,c,oBAIA,WAEI,OACI,cAAC,EAAD,CAASN,MAAOO,KAAK7B,MAAMsB,MACvBQ,aAAcD,KAAK7B,MAAM8B,aACzBlB,gBAAiBiB,KAAK7B,MAAMY,sB,GAVbmB,IAAMC,WAyBtBC,sBACXC,IACAC,aAVoB,SAACb,GAErB,MAAO,CACHA,MAAOA,EAAMc,aAAaA,gBAOL,CAAEN,iBAAclB,sBACzCyB,IAHWJ,CAIbL","file":"static/js/3.6ebbd22d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"massages\":\"dialogs_massages__3BPLL\",\"text\":\"dialogs_text__1p56a\"};","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport Textarea from '../../../Controls/controls'\r\nimport { maxLength, requiredField } from '../../../utilits/validators/Validators'\r\n\r\nconst DialogsForm = (props) => {\r\n    \r\n    const addNewMassage = (values) => {\r\n        debugger\r\n        props.addMassageThunk(values.text);\r\n    }\r\n\r\n    return (\r\n        <DialogsReduxForm onSubmit={addNewMassage} />\r\n    )\r\n\r\n}\r\n\r\nconst maxMassageLenght = maxLength(100)\r\n\r\nconst DialogsFromContainer = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name=\"text\" placeholder=\"text your massage\" validate={requiredField, maxMassageLenght} />\r\n            </div>\r\n            <div>\r\n                <button>Send Massage</button>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nconst DialogsReduxForm = reduxForm({ form: 'dialogs' })(DialogsFromContainer)\r\n\r\nexport default DialogsForm","import React from 'react'\r\nimport s from '../massages/massages.module.css'\r\n\r\nconst Massages = (props) => {\r\n    return (\r\n        <div className={s.text}>{props.massages}</div>\r\n    )\r\n}\r\n\r\nexport default Massages","import React from 'react'\r\nimport s from '../user/user.module.css'\r\n\r\nconst User = (props) => {\r\n\r\n    return (\r\n        <div className={s.name}>{props.name + '' + props.id} </div>\r\n    )\r\n}\r\n\r\nexport default User","import React from 'react'\r\nimport s from '../dialogs/dialogs.module.css'\r\nimport DialogsForm from './dialogsForm';\r\nimport Massages from './massages/massages';\r\nimport User from './user/user';\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    \r\n    let massageElements = props.state.massages.map(el => <Massages massages={el.massages}></Massages>)\r\n    let dialogsElemetns = props.state.dialogs.map(el => <User name={el.name} id={el.id}></User>);\r\n\r\n    return (\r\n        <>\r\n            <div className={s.users}>\r\n                {dialogsElemetns}\r\n            </div>\r\n            <div className={s.massages}>\r\n                {massageElements}\r\n            </div>\r\n            <DialogsForm addMassageThunk={props.addMassageThunk} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Dialogs","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Dialogs from './dialogs'\r\nimport { dialogsThunk, addMassageThunk } from '../../../redux/massagesPageReducer'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { withAuthRedirect2 } from '../../../hoc/redirectComponent2'\r\nimport { compose } from 'redux'\r\nimport withLazyComponent from '../../../hoc/lazyComponent'\r\n\r\nclass DialogsContainer extends React.Component {\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Dialogs state={this.props.state}\r\n                dialogsThunk={this.props.dialogsThunk}\r\n                addMassageThunk={this.props.addMassageThunk}\r\n            />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        state: state.massagesPage.massagesPage,\r\n\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withLazyComponent,\r\n    connect(mapStateToProps, { dialogsThunk, addMassageThunk }),\r\n    withAuthRedirect2,\r\n)(DialogsContainer)"],"sourceRoot":""}