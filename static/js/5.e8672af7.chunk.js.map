{"version":3,"sources":["components/main_container/news/news.module.css","components/main_container/news/newNews/newNews.jsx","components/main_container/news/newsForm.tsx","components/main_container/news/news.tsx","components/main_container/news/newsContainer.tsx"],"names":["module","exports","NewNews","props","src","alt","text","NewsReduxForm","reduxForm","form","handleSubmit","onSubmit","createField","Textarea","requiredField","type","className","s","news_send","News","addNewsPost","newsList","newsPage","map","el","news_container","formData","newsText","connect","state","allNews"],"mappings":"+GACAA,EAAOC,QAAU,CAAC,eAAiB,6BAA6B,UAAY,0B,0FCU7DC,EATC,SAACC,GACb,OACI,qCACA,qBAAKC,IAAI,GAAGC,IAAI,KAChB,8BAAMF,EAAMG,W,yBCYLC,EAFOC,YAAsD,CAAEC,KAAM,QAA9DD,EATwF,SAAC,GAAsB,IAApBE,EAAmB,EAAnBA,aAC7G,OACI,uBAAMC,SAAUD,EAAhB,UACKE,YAAkCC,IAAU,OAAQ,WAAY,0BAA2B,CAACC,MAC7F,wBAAQC,KAAK,SAASC,UAAWC,IAAEC,UAAnC,8B,kBCUGC,EAfuB,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,YAKjCC,EAL6D,iBAK5CC,SAASC,KAAI,SAAAC,GAAE,OAAI,cAAC,EAAD,CAASlB,KAAMkB,EAAGlB,UAE1D,OACI,sBAAKU,UAAWC,IAAEQ,eAAlB,UACKJ,EACD,cAAC,EAAD,CAAeV,SATJ,SAACe,GAChBN,EAAYM,EAASC,iB,SCadC,uBAPS,SAACC,GAErB,MAAO,CACHP,SAAUO,EAAMP,SAASA,SAASQ,WAI2D,CAAEV,iBAAxFQ,EAdyC,SAAC,GAA+B,IAA7BR,EAA4B,EAA5BA,YAAaE,EAAe,EAAfA,SAEpE,OACI,cAAE,EAAF,CAAOF,YAAaA,EAAaE,SAAUA","file":"static/js/5.e8672af7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"news_container\":\"news_news_container__3zbcZ\",\"news_send\":\"news_news_send__3jqOL\"};","import React from 'react'\r\n\r\nconst NewNews = (props) => {\r\n    return(\r\n        <>\r\n        <img src=\"\" alt=\"\" />\r\n        <div>{props.text}</div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NewNews","import React from \"react\";\r\nimport { InjectedFormProps, reduxForm } from \"redux-form\";\r\nimport Textarea from \"../../../Controls/controls\";\r\nimport { createField } from \"../../../Controls/controls\";\r\nimport { requiredField } from \"../../../utilits/validators/Validators\";\r\nimport s from '../news/news.module.css'\r\n\r\nconst NewsForm: React.FC<IPropsForNewsForm & InjectedFormProps<FormDataTypeForNewsForm, IPropsForNewsForm>> = ({ handleSubmit }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField<PropsNameForNewsForm>(Textarea, 'text', 'newsText', 'Write your news here...', [requiredField])}\r\n            <button type='submit' className={s.news_send} > Post News</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst NewsReduxForm = reduxForm<FormDataTypeForNewsForm, IPropsForNewsForm>({ form: 'news' })(NewsForm)\r\n\r\nexport default NewsReduxForm\r\n\r\ntype IPropsForNewsForm = {\r\n    onSubmit: (formData: FormDataTypeForNewsForm) => void\r\n\r\n}\r\n\r\nexport type FormDataTypeForNewsForm = {\r\n    newsText: string\r\n}\r\n\r\ntype PropsNameForNewsForm = keyof FormDataTypeForNewsForm","import React from 'react'\r\nimport { newNews } from '../../../types/types';\r\nimport s from '../news/news.module.css'\r\nimport NewNews from './newNews/newNews';\r\nimport NewsReduxForm, { FormDataTypeForNewsForm } from './newsForm';\r\n\r\nconst News: React.FC<IPropsForNews> = ({ addNewsPost, ...props }) => {\r\n    const onDataSent = (formData: FormDataTypeForNewsForm) => {\r\n        addNewsPost(formData.newsText)\r\n    }\r\n\r\n    let newsList = props.newsPage.map(el => <NewNews text={el.text} />)\r\n\r\n    return (\r\n        <div className={s.news_container}>\r\n            {newsList}\r\n            <NewsReduxForm onSubmit={onDataSent} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News\r\n\r\ntype IPropsForNews = {\r\n    newsPage: Array<newNews>\r\n    addNewsPost: (text: string) => void\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport News from './news'\r\nimport { addNewsPost } from '../../../redux/newsPageReducer'\r\nimport { AppStateType } from '../../../redux/redux-store'\r\nimport { newNews } from '../../../types/types'\r\n\r\nconst NewsContainer: React.FC<IPropsForNewsContainer> = ({ addNewsPost, newsPage }) => {\r\n\r\n    return (\r\n        < News addNewsPost={addNewsPost} newsPage={newsPage} />\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n\r\n    return {\r\n        newsPage: state.newsPage.newsPage.allNews,\r\n    }\r\n}\r\n\r\nexport default connect<MapStatePropsType, MapDispatchProps, OwnProps, AppStateType>(mapStateToProps, { addNewsPost })(NewsContainer);\r\n\r\ntype IPropsForNewsContainer = MapStatePropsType & MapDispatchProps & OwnProps\r\n\r\ntype MapStatePropsType = {\r\n    newsPage: Array<newNews>\r\n}\r\ntype MapDispatchProps = {\r\n    addNewsPost: (text: string) => void\r\n}\r\ntype OwnProps = {\r\n\r\n}"],"sourceRoot":""}