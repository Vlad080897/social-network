{"version":3,"sources":["components/main_container/dialogs/dialogs.module.css","components/main_container/dialogs/dialogsForm.jsx","components/main_container/dialogs/massages.jsx","components/main_container/dialogs/user.jsx","components/main_container/dialogs/dialogs.jsx","components/main_container/dialogs/dialogsContainer.jsx"],"names":["module","exports","maxMassageLenght","maxLength","DialogsReduxForm","reduxForm","form","props","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","requiredField","DialogsForm","values","addMassageThunk","text","Massages","massage","User","Dialogs","massageElements","massages","map","el","index","dialogsElemetns","users","id","className","s","DialogsContainer","this","dialogsThunk","React","Component","compose","withLazyComponent","connect","state","getMassages","getUsersMassages","withAuthRedirect2"],"mappings":"+GACAA,EAAOC,QAAU,CAAC,SAAW,0BAA0B,KAAO,wB,+JCgBxDC,EAAmBC,YAAU,KAgB7BC,EAAmBC,YAAU,CAAEC,KAAM,WAAlBD,EAdI,SAACE,GAC1B,OACI,uBAAMC,SAAUD,EAAME,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,KAAK,OAAOC,YAAY,oBAAoBC,UAAUC,IAAed,OAErG,8BACI,0DASDe,EA9BK,SAACV,GAMjB,OACI,cAACH,EAAD,CAAkBI,SALA,SAACU,GACnBX,EAAMY,gBAAgBD,EAAOE,UCGtBC,EATE,SAACd,GACd,OACI,8BACKA,EAAMe,WCOJC,EAVF,SAAChB,GAEV,OACI,8BACKA,EAAMM,QCuBJW,EArBC,SAACjB,GACb,IAAIkB,EAAkBlB,EAAMmB,SAASC,KAAI,SAACC,EAAIC,GAC1C,OAAO,cAAC,EAAD,CAAsBP,QAASM,EAAGF,UAAnBG,MAGtBC,EAAkBvB,EAAMwB,MAAMJ,KAAI,SAAAC,GAAE,OAAI,cAAC,EAAD,CAAkBf,KAAMe,EAAGf,KAAMmB,GAAIJ,EAAGI,IAA7BJ,EAAGI,OAE1D,OACI,qCACI,qBAAKC,UAAWC,IAAEH,MAAlB,SACKD,IAEL,sBAAKG,UAAWC,IAAER,SAAlB,UACKD,EACD,cAAC,EAAD,CAAaN,gBAAiBZ,EAAMY,yB,yCCZ9CgB,E,uKACF,c,oBAIA,WAEI,OACI,cAAC,EAAD,CAAST,SAAUU,KAAK7B,MAAMmB,SAC1BK,MAAOK,KAAK7B,MAAMwB,MAClBM,aAAcD,KAAK7B,MAAM8B,aACzBlB,gBAAiBiB,KAAK7B,MAAMY,sB,GAXbmB,IAAMC,WA0BtBC,sBACXC,IACAC,aAVoB,SAACC,GACrB,MAAO,CACHjB,SAAUkB,YAAYD,GACtBZ,MAAOc,YAAiBF,MAOH,CAAExB,sBAC3B2B,IAHWN,CAIbL","file":"static/js/5.6adce21f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"massages\":\"dialogs_massages__3BPLL\",\"text\":\"dialogs_text__1p56a\"};","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport Textarea from '../../../Controls/controls'\r\nimport { maxLength, requiredField } from '../../../utilits/validators/Validators'\r\n\r\nconst DialogsForm = (props) => {\r\n    \r\n    const addNewMassage = (values) => {\r\n        props.addMassageThunk(values.text);\r\n    }\r\n\r\n    return (\r\n        <DialogsReduxForm onSubmit={addNewMassage} />\r\n    )\r\n\r\n}\r\n\r\nconst maxMassageLenght = maxLength(100)\r\n\r\nconst DialogsFromContainer = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name=\"text\" placeholder=\"text your massage\" validate={requiredField, maxMassageLenght} />\r\n            </div>\r\n            <div>\r\n                <button>Send Massage</button>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nconst DialogsReduxForm = reduxForm({ form: 'dialogs' })(DialogsFromContainer)\r\n\r\nexport default DialogsForm","import React from \"react\";\r\n\r\nconst Massages = (props) => {\r\n    return (\r\n        < div >\r\n            {props.massage}\r\n        </div >\r\n    )\r\n\r\n}\r\n\r\nexport default Massages\r\n","import React from \"react\";\r\n\r\nconst User = (props) => {\r\n    debugger\r\n    return (\r\n        < div >\r\n            {props.name}\r\n        </div >\r\n    )\r\n\r\n}\r\n\r\nexport default User","import React from 'react'\r\nimport s from '../dialogs/dialogs.module.css'\r\nimport DialogsForm from './dialogsForm';\r\nimport Massages from './massages';\r\nimport User from './user';\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let massageElements = props.massages.map((el, index) => {\r\n        return <Massages key={index} massage={el.massages}></Massages>\r\n    })\r\n\r\n    let dialogsElemetns = props.users.map(el => <User key={el.id} name={el.name} id={el.id}></User>);\r\n\r\n    return (\r\n        <>\r\n            <div className={s.users}>\r\n                {dialogsElemetns}\r\n            </div>\r\n            <div className={s.massages}>\r\n                {massageElements}\r\n                <DialogsForm addMassageThunk={props.addMassageThunk} />\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Dialogs","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Dialogs from './dialogs'\r\nimport { addMassageThunk } from '../../../redux/massagesPageReducer'\r\nimport { withAuthRedirect2 } from '../../../hoc/redirectComponent2'\r\nimport { compose } from 'redux'\r\nimport withLazyComponent from '../../../hoc/lazyComponent'\r\nimport { getMassages, getUsersMassages } from '../../../redux/selectors'\r\n\r\n\r\nclass DialogsContainer extends React.Component {\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Dialogs massages={this.props.massages}\r\n                users={this.props.users}\r\n                dialogsThunk={this.props.dialogsThunk}\r\n                addMassageThunk={this.props.addMassageThunk}\r\n            />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        massages: getMassages(state),\r\n        users: getUsersMassages(state),\r\n\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withLazyComponent,\r\n    connect(mapStateToProps, { addMassageThunk }),\r\n    withAuthRedirect2,\r\n)(DialogsContainer)"],"sourceRoot":""}